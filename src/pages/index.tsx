import { type NextPage } from "next";
import Head from "next/head";
import {
  Bar,
  BarChart,
  Line,
  LineChart,
  ResponsiveContainer,
  Tooltip,
  YAxis,
} from "recharts";
import { api } from "../utils/api";

const Home: NextPage = () => {
  const itemHistory = api.itemRouter.getItemStatistics.useQuery({
    itemId: "81dfc234-7d0a-48da-bd14-0f24339d9075",
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-96 flex-col">
        {itemHistory.data && (
          <>
            <ResponsiveContainer>
              <LineChart
                margin={{
                  top: 5,
                  right: 30,
                  left: 20,
                }}
                syncId="anyId"
                data={itemHistory.data.map((el) => {
                  return {
                    name: el.date.toLocaleDateString(),
                    ...el,
                  };
                })}
              >
                {/* <CartesianGrid strokeDasharray="3 3" /> */}
                <YAxis />
                {/* <XAxis dataKey="name" /> */}
                <Tooltip
                  content={({ active, payload }) => {
                    if (active && payload && payload.length) {
                      return (
                        <div className="flex flex-col border border-zinc-600 outline-none backdrop-blur-sm dark:backdrop-blur">
                          <span>{payload[0].payload.name}</span>
                          <span>Price: {payload[0].payload.price}</span>
                          <span>Volume: {payload[0].payload.volume}</span>
                        </div>
                      );
                    }
                  }}
                />
                <Line
                  dataKey="price"
                  name="Price"
                  stroke="#8884d8"
                  dot={false}
                />
              </LineChart>
            </ResponsiveContainer>
            <ResponsiveContainer height={100}>
              <BarChart
                margin={{
                  right: 30,
                  left: 20,
                }}
                syncId="anyId"
                data={itemHistory.data.map((el) => {
                  return {
                    name: el.date.toLocaleDateString(),
                    ...el,
                  };
                })}
              >
                {/* <CartesianGrid strokeDasharray="3 3" /> */}
                <YAxis />
                <Tooltip
                  content={() => {
                    return <></>;
                  }}
                />
                <Bar dataKey="volume" name="Volume" stroke="#8884d8" />
              </BarChart>
            </ResponsiveContainer>
          </>
        )}
      </div>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
